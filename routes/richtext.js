// Generated by CoffeeScript 1.10.0
(function() {
  var Errors, db, express, router;

  express = require('express');

  router = express.Router({
    mergeParams: true
  });

  db = require('../database');

  Errors = require('../errors');

  router.get('/', function(req, res) {
    var Richtext, name;
    Richtext = db.models.richtext;
    name = req.query.key;
    return Richtext.find({
      where: {
        name: name
      }
    }).then(function(richtext) {
      if (!richtext) {
        throw new Errors.InvalidAccess();
      }
      richtext = richtext.get({
        plain: true
      });
      return res.json(richtext);
    })["catch"](function(err) {
      res.status(err.status || 400);
      return res.json(err);
    });
  });

  router.post('/', function(req, res) {
    var Richtext, User, name;
    Richtext = db.models.richtext;
    name = req.body.name;
    User = db.models.user;
    return db.Promise.resolve().then(function() {
      var ref, ref1;
      if (!(req != null ? (ref = req.session) != null ? (ref1 = ref.user) != null ? ref1.id : void 0 : void 0 : void 0)) {
        return;
      }
      return User.findById(req.session.user.id);
    }).then(function(user) {
      if (!user) {
        throw new Errors.InvalidAccess();
      }
      return Richtext.find({
        where: {
          name: name
        }
      });
    }).then(function(richtext) {
      if (richtext) {
        richtext.content = req.body.content;
        return richtext.save();
      } else {
        return Richtext.create({
          name: name,
          content: req.body.content
        });
      }
    }).then(function(richtext) {
      richtext = richtext.get({
        plain: true
      });
      return res.json(richtext);
    })["catch"](function(err) {
      res.status(err.status || 400);
      return res.json(err);
    });
  });

  module.exports = router;

}).call(this);

//# sourceMappingURL=richtext.js.map
